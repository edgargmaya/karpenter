apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  # References cloud provider-specific custom resource, see your cloud provider specific documentation
  providerRef:
    name: default

  # Provisioned nodes will have these taints
  taints:
    - key: example.com/special-taint
      effect: NoSchedule

  # Provisioned nodes will have these taints, but pods do not need to tolerate these taints
  startupTaints:
    - key: example.com/another-taint
      effect: NoSchedule

  # Labels are arbitrary key-values that are applied to all nodes
  labels:
    billing-team: my-team

  # Annotations are arbitrary key-values that are applied to all nodes
  annotations:
    example.com/owner: "my-team"

  # Requirements that constrain the parameters of provisioned nodes
  requirements:
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: ["c", "m", "r"]
    - key: "karpenter.k8s.aws/instance-cpu"
      operator: In
      values: ["4", "8", "16", "32"]
    # ... other requirements ...

  # Kubelet configuration options
  kubeletConfiguration:
    clusterDNS: ["10.0.1.100"]
    containerRuntime: containerd
    # ... other kubelet configuration options ...

  # Resource limits for the cluster
  limits:
    resources:
      cpu: "1000"
      memory: 1000Gi

  # Other features and settings
  consolidation:
    enabled: true
  ttlSecondsUntilExpired: 2592000
  ttlSecondsAfterEmpty: 30
  weight: 10
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
  namespace: kube-system
spec:
  ttlSecondsAfterEmpty: 30
  limits:
    resources:
      cpu: "1000"
      memory: "1000Gi"
  provider:
    instanceProfile: "KarpenterInstanceRole"
    subnetSelector:
      karpenter.sh/discovery: "edgar-test"
    securityGroupSelector:
      karpenter.sh/discovery: "edgar-test"
